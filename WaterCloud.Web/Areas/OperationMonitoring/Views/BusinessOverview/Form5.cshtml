@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Index.cshtml";
}
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment env
<meta name="renderer" content="webkit">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
<style>

    .layui-card {
        border: 1px solid #f2f2f2;
        border-radius: 5px;
    }

    .icon {
        margin-right: 10px;
        color: #1aa094;
    }

    .icon-cray {
        color: #ffb800 !important;
    }

    .icon-blue {
        color: #1e9fff !important;
    }

    .icon-tip {
        color: #ff5722 !important;
    }

    .layuimini-qiuck-module {
        text-align: center;
        margin-top: 10px
    }

        .layuimini-qiuck-module a i {
            display: inline-block;
            width: 100%;
            height: 60px;
            line-height: 60px;
            text-align: center;
            border-radius: 2px;
            font-size: 30px;
            background-color: #F8F8F8;
            color: #333;
            transition: all .3s;
            -webkit-transition: all .3s;
        }

        .layuimini-qiuck-module a cite {
            position: relative;
            top: 2px;
            display: block;
            color: #666;
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
            font-size: 14px;
        }

    .welcome-module {
        width: 40%;
        height: 100px;
    }

    .panel {
        background-color: #fff;
        border: 1px solid transparent;
        border-radius: 3px;
        -webkit-box-shadow: 0 1px 1px rgba(0,0,0,.05);
        box-shadow: 0 1px 1px rgba(0,0,0,.05)
    }

    .panel-body {
        padding: 30px
    }

    .panel-title {
        margin-top: 0;
        margin-bottom: 0;
        font-size: 12px;
        color: inherit
    }

    .label {
        display: inline;
        padding: .2em .6em .3em;
        font-size: 75%;
        font-weight: 700;
        line-height: 1;
        color: #fff;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: .25em;
        margin-top: .3em;
    }

    .label {
        display: inline;
        padding: .2em .6em .3em;
        font-size: 75%;
        font-weight: 700;
        line-height: 1;
        color: #fff;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: .25em;
        margin-top: .3em;
    }

    .layui-bg-number {
        background-color: #F8F8F8;
    }

    .tmp-layui-col-xs4 {
        width: 12.5%;
        float: left;
        position: relative;
        display: block;
        box-sizing: border-box
    }
    /*鼠标指向表格时,奇数行背景颜色 */
    /*    .layui-table tbody tr:hover, .layui-table-hover {
        background-color: #eeffee;
    }*/

    /* 表格头部工具栏背景色 */
    /*    .layui-table-tool {
        background-color: #eeffee;
    }*/

    /* 表格头部背景色 */
    /*th {
        background-color: #359f6a;*/ /* MediumSeaGreen */
    /*color: #fff;
        font-weight: bold
    }*/

</style>
<script src="~/js/lay-module/echarts/echarts.min.js"></script>
<script src="~/js/lay-module/echarts/world.js"></script>
<script src="~/js/lay-module/d3/d3.js"></script>
<script src="~/js/lay-module/d3/d3.layout.cloud.js"></script>
<script>
    layui.use(['commonTable', 'form', 'table', 'common', 'optimizeSelectOption', 'element'], function () {
        var commonTable = layui.commonTable,
            form = layui.form,
            table = layui.table,
            element = layui.element,
            common = layui.common;
        wcLoading.close();
        $(function () {
            loadFour();
            loadFive();
        });
        function loadFive() {
            var myChart = echarts.init(document.getElementById('chart4b'));
            var data = [[{ name: '北美洲', value: 0 }], [{ name: '南美洲', value: 0 }], [{ name: '非洲', value: 0 }], [{ name: '欧洲', value: 0 }], [{ name: '大洋洲', value: 0 }], [{ name: '印度', value: 0 }], [{ name: '中国', value: 1 }]]
            var geoCoordMap = { '北美洲': [-101.670961, 41.103997], '南美洲': [-58.842054, -11.895087], '非洲': [22.106051, 14.099049], '欧洲': [15.777381, 49.971800], '大洋洲': [132.637011, -25.596128], '印度': [78.475369, 22.934290], '中国': [113.651000, 39.526776] };
            var convertData = function (data) {
                var res = [];
                for (var i = 0; i < data.length; i++) {
                    var dataItem = data[i];
                    var fromCoord = geoCoordMap[dataItem[0].name];
                    var toCoord = [116.46, 39.92];
                    if (fromCoord && toCoord) {
                        res.push([{
                            coord: fromCoord,
                            value: dataItem[0].value
                        }, {
                            coord: toCoord,
                        }]);
                    }
                }
                return res;
            };

            var series = [];
            [['北京', data]].forEach(function (item, i) {
                console.log(item);
                series.push({
                    type: 'lines', zlevel: 2,
                    effect: { show: true, period: 4, trailLength: 0.02, symbol: 'arrow', symbolSize: 5, },
                    lineStyle: { normal: { width: 1, opacity: 1, curveness: .3, color: '#00fefe' } },
                    data: convertData(item[1])
                }, {
                    type: 'effectScatter', coordinateSystem: 'geo', zlevel: 2,
                    rippleEffect: { period: 4, brushType: 'stroke', scale: 4 },
                    label: {
                        normal: {
                            show: true, position: 'right', offset: [5, 0], fontSize: 15,
                            formatter: function (params) { return params.data.name; }
                        },
                        emphasis: { show: true }
                    },
                    symbol: 'circle',
                    symbolSize: function (val) {
                        return 6 + val[2] * 5;
                    },
                    itemStyle: { normal: { show: false, color: '#00fefe' } },
                    data: item[1].map(function (dataItem) {
                        return { name: dataItem[0].name, value: geoCoordMap[dataItem[0].name].concat([dataItem[0].value]) };
                    }),
                },
                    {
                        type: 'scatter', coordinateSystem: 'geo', zlevel: 2,
                        rippleEffect: { period: 4, brushType: 'stroke', scale: 4 },
                        label: {
                            normal: {
                                show: true, position: 'right',
                                color: '#0f0', formatter: '{b}',
                                textStyle: { color: '#0f0' }
                            },
                            emphasis: { show: true, color: '#f60' }
                        },
                    }
                );
            }
            );

            option = {
                backgroundColor: 'transparent',
                tooltip: {
                    trigger: 'item',
                    backgroundColor: 'rgba(25,25,44,0.5)',
                    textStyle: { color: '#e1e2e5' }
                },

                geo: {
                    map: 'world',
                    zoom: 1.2,
                    label: {
                        emphasis: {
                            show: false
                        }
                    },
                    roam: true,
                    itemStyle: {
                        normal: {
                            areaColor: '#58462f',
                            borderColor: '#24273e'
                        },
                        emphasis: {
                            areaColor: '#17a086'
                        }
                    }
                },

                series: series
            };
            myChart.setOption(option);
            window.addEventListener = echart.resize;
            function resize(width, height) {
                var chart = document.getElementById('chart4b');
                chart.style.width = width + "px";
                chart.style.height = height + "px";
                echart.resize();
            }
        }
        function loadFour() {
            var listName = new Array();
            var str = [];
            $.ajax({
                url: "/OperationMonitoring/BusinessOverview/GetDataKeyCustomers",
                dataType: "json",
                async: false,
                success: function (data) {
                    $(data).each(function (index, item) {
                        var str3 = new Object();
                        //默认加一条空值，防止.data(nodes.slice(1));获取不到。
                        if (index == "0") {
                            listName.unshift("");
                            str3.name = "";
                            str3.val = 0;
                            str[index] = str3;
                        }
                        listName.push(item.Name);
                        str3.name = item.Name;
                        str3.val = item.Number * 1000 + 20000;
                        str[index + 1] = str3;
                    })
                }
            });
            var fill = d3.scale.category20();
            var width = 450,
                height = 480;
            var data = str

            //[
            //            { "name": "河北", "val": "62356" },
            //            {"name":"河南","val":"89565"},
            //            {"name":"广东","val":"63658"},
            //            {"name":"江西","val":"68525"},
            //            {"name":"上海","val":"36585"},
            //            {"name":"广西","val":"66589"},
            //            {"name":"云南","val":"86955"},
            //            {"name":"江苏","val":"75565"},
            //            {"name":"陕西","val":"73668"},
            //            {"name":"湖南","val":"95684"}
            //]
            //range（节点数目），radius大小
            var nodes = d3.range(listName.length).map(function (i) {
                var data1 = {
                    radius: parseFloat(data[i].val) / 2000,
                    value: parseFloat(data[i].val),
                    label: data[i].name
                };
                return data1;


            }),
                root = nodes[0],
                color = d3.scale.category10();

            root.radius = 0;
            root.fixed = true;

            //力导向
            var force = d3.layout.force()
                .gravity(0.01)  //中心产生重力（通俗点说就是改变圆球之间的距离），数值越大挨得越近，0则没有重力
                //    .charge(function(d, i) { return i ? 0 : -2000; })
                .nodes(nodes)
                .size([width, height]);

            force.start();
            var padding = { left: -0, right: -0, top: 0, bottom: -0 };

            var svg = d3.select("#d3_temp").append("svg")
                .attr("width", width)
                .attr("height", height);
            var ball = svg.selectAll("g")
                .data(nodes.slice(1));

            var elemEnter = ball.enter()
                .append("g")
                .attr("transform", "translate(" + padding.left + "," + padding.top + ")");

            var circle = elemEnter.append("circle")
                .attr("r", function (d) { return d.radius; })
                //.style("fill", function(d, i) { return color(i % 1); })
                .style("fill", function (d, i) { return fill(i); })//fill 在前面15行定义为颜色集

            elemEnter.append("text")
                .attr("class", "text")
                .text(d => d.label)
                .attr("font-size", "14px")
                .attr("fill", "#fff")

            force.on("tick", function (e) {
                var q = d3.geom.quadtree(nodes),
                    i = 0,
                    n = nodes.length;

                svg.selectAll("circle")
                    .attr("cx", function (d) { return d.x; })
                    .attr("cy", function (d) { return d.y; });
                svg.selectAll("text")
                    .attr("x", function (d) { return d.x - 16; })
                    .attr("y", function (d) { return d.y + 6; });

                force.resume();

            });

            svg.on("mousemove", function () {
                var p1 = d3.mouse(this);
                root.px = p1[0];
                root.py = p1[1];
                force.resume();
            });
        }
    })
</script>
<div class="layuimini-container">
    <div class="layuimini-main">
        <div class="layui-row layui-col-space15">
            <div class="layui-col-md12">
                <div class="layui-card">
                    <div class="layui-card-header">
                        <i class="fa fa-fire icon"></i>客户分布
                    </div>
                    <div class="layui-card-body layui-text">
                        <div style="float:left;width:60%">
                            <div style="text-align:center;font-size:13px;color:#808080;">全球分布</div>
                            <div id="chart4b" style="height:483px; "></div>
                        </div>
                        <div style="margin-left:60%;width:auto;">
                            <div style="text-align:center;font-size:13px;color:#808080;">主要客户</div>
                            <div id="chart4a" style="height:480px;">
                                <div id="d3_temp" class="test">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>